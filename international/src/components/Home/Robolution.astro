---
import { getImageUrl } from '@/utils/image-helper';

export interface Props {
    content?: {
        title1?: {
            intro1: string;
            sub1: string;
            image1: string;
            textColor1: string;
            textColor2: string;
            containerColor1: string;
        };
        title2?: {
            intro2: string;
            sub2: string;
            image2: string;
            textColor1: string;
            textColor2: string;
            containerColor2: string;
        };
    }
}

const { content = {} } = Astro.props;
const { title1 = {}, title2 = {} } = content;
---

<style>
    @keyframes slideInLeft {
        0% {
            opacity: 0;
            transform: translateX(-40px);
        }
        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }
    @keyframes slideInRight {
        0% {
            opacity: 0;
            transform: translateX(40px);
        }
        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }
    .slide-in-left {
        opacity: 0;
    }
    .slide-in-right {
        opacity: 0;
    }
    .slide-in-left.animate {
        opacity: 1;
        animation: slideInLeft 1s ease forwards;
    }
    .slide-in-right.animate {
        opacity: 1;
        animation: slideInRight 1s 0.3s ease forwards;
    }
    .img-hover-scale {
        transition: transform 0.3s;
    }
    .img-hover-scale:hover {
        transform: scale(1.05);
    }
</style>

<script type="module" is:inline>
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("animate");
                    observer.unobserve(entry.target);
                }
            });
        },
        { threshold: 0.2 }
    );

    document.addEventListener("DOMContentLoaded", () => {
        document
            .querySelectorAll(".slide-in-left, .slide-in-right")
            .forEach((el) => {
                observer.observe(el);
            });
    });
</script>

<div class="flex justify-center bg-white my-[54px]">
    <div class="grid lg:grid-cols-1 gap-10 w-full min-w-fit max-w-[600px] p-5">
        {title1 && title1.intro1 && (
        <div
                style={`background-color: ${title1.containerColor1 || '#f5f5f5'}`}
            class="grid grid-cols-1 lg:grid-cols-2 items-center justify-center rounded-lg mx-auto gap-5 lg:gap-30 w-auto p-12 slide-in-left"
        >
            <div class="flex flex-wrap w-full max-w-[610px]">
                <h3
                        style={`color: ${title1.textColor1 || '#000000'}`}
                    class="text-5xl lg:text-[86px] font-bebas tracking-wider mb-4"
                        set:html={title1.intro1}
                />
                <h4
                        style={`color: ${title1.textColor2 || '#666666'}`}
                    class="text-xs lg:text-base mt-4"
                        set:html={title1.sub1}
                />
            </div>
            <div class="place-items-center">
                <img
                        src={getImageUrl(title1.image1)}
                    class="h-auto lg:h-[300px] w-full max-w-[540px] rounded-md opacity-80 shadow-md shadow-gray-200 object-cover img-hover-scale"
                />
            </div>
        </div>
        )}

        {title2 && title2.intro2 && (
        <div
                style={`background-color: ${title2.containerColor2 || '#e9e9e9'}`}
            class="grid grid-cols-1 lg:grid-cols-2 items-center justify-center rounded-lg mx-auto gap-5 lg:gap-30 w-auto p-12 slide-in-right"
        >
            <div class="place-items-center">
                <img
                        src={getImageUrl(title2.image2)}
                    class="h-auto lg:h-[300px] w-auto rounded-md opacity-80 shadow-md shadow-gray-200 img-hover-scale"
                />
            </div>
            <div class="flex flex-wrap w-full max-w-[610px]">
                <h3
                        style={`color: ${title2.textColor1 || '#000000'}`}
                    class="text-5xl lg:text-[86px] font-bebas tracking-wider mb-4"
                        set:html={title2.intro2}
                />
                <h4
                        style={`color: ${title2.textColor2 || '#666666'}`}
                    class="text-xs lg:text-base mt-4"
                        set:html={title2.sub2}
                />
            </div>
        </div>
        )}
    </div>
</div>
