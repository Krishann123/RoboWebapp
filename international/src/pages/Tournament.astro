---
import { getTemplate } from "@/db/mongodb.js";
import { getImageUrl } from "@/utils/image-helper.js";
import Layout from "../layouts/Layout.astro";
import "@/styles/style.css";
import Hero from "@/components/Tournament/Hero.astro";

const countrySiteHeader = Astro.request.headers.get("x-country-site");
const countrySite = countrySiteHeader
    ? JSON.parse(countrySiteHeader)
    : { slug: "default" };

const template = await getTemplate(countrySite.slug);
const dbContent = template?.config?.Contents || {};

const layoutContent = {
    nav: dbContent.Navbar || {},
    footer: dbContent.Footer || {},
    banner: dbContent.Banner || {},
};

const tournamentContent = {
    Overview: dbContent.Tournament?.Overview || {},
    categories: dbContent.Tournament?.categories || [],
};

const participationContent = {
    title: "Who Can Participate?",
    teacher: {
        header: "Teachers & Professionals",
        subtext:
            "Educators from elementary to college across all disciplines, as well as industry practitioners, are encouraged to form teams representing their school or company. This is a unique opportunity for professional development and to guide the next generation of innovators.",
        image: "/images/tournaments/teachers.png",
    },
    student: {
        header: "Students",
        subtext:
            "High school and college students with a passion for technology are welcome. Team up with your peers to tackle challenges, showcase your innovative projects, and compete against the best from around the world.",
        image: "/images/tournaments/students.png",
    },
};

const competeContent = {
    header: "Ready to Compete?",
    subtext:
        "Join a global community of innovators and problem-solvers. Register your team today and be part of the robotics revolution!",
    buttonText: "Register Now",
    buttonLink: "/international/registration",
};
---

<Layout title="Erovoutika International - Tournament" content={layoutContent}>
    <Hero />
    <div class="overview" id="OverView">
        <div>
            <h1 class="subhead">
                {tournamentContent.Overview.subheadings || "CATEGORIES"}
            </h1>
            <h1 class="head tracking-wider">
                {tournamentContent.Overview.Headings ||
                    "Explore Our Competitions"}
            </h1>
            <p class="info max-w-3xl mx-auto">
                Robolution features dynamic tracks designed to challenge participants in
                innovation, problem-solving, and technical expertise. Compete against
                global talents, collaborate with experts, and push the boundaries of
                technology in the following competitions.
            </p>
        </div>
        <!-- PICTURE SECTION -->
        <div
            class="grid grid-cols-1 sm:grid-cols-2 place-items-center md:grid-cols-2 gap-8 mt-10"
        >
            {
                tournamentContent.categories.map((category) => (
                    <div class="text-center">
                        <a
                            data-modal-target={category.id}
                            class="modal-trigger transition hover:scale-110 cursor-pointer block"
                        >
                            <img
                                src={getImageUrl(category.image)}
                                alt={category.title}
                                class="rounded-lg shadow-lg mx-auto"
                            />
                            <h3 class="text-2xl font-bold mt-4 font-bebas tracking-wide">
                                {category.title}
                            </h3>
                        </a>
                    </div>
                ))
            }
        </div>
    </div>

    <!-- Modals -->
    {
        tournamentContent.categories.map((category) => (
            <div
                id={category.id}
                class="fixed inset-0 z-50 flex items-center justify-center bg-black/60 hidden p-4 modal-backdrop"
            >
                <div class="bg-white p-6 md:p-8 rounded-lg shadow-2xl relative w-full max-w-2xl max-h-[90vh] overflow-y-auto">
                    <button
                        data-modal-close={category.id}
                        class="absolute top-4 right-4 text-3xl font-bold text-gray-500 hover:text-gray-800 transition"
                        >&times;</button
                    >
                    <img
                        src={getImageUrl(category.image)}
                        class="w-full max-w-xs mx-auto rounded-lg mb-6"
                        alt={category.title}
                    />
                    <h2 class="text-3xl font-bold text-center mb-6 font-bebas tracking-wider">
                        {category.title}
                    </h2>
                    <ul class="list-disc space-y-3 pl-5 text-gray-700">
                        {category.mechanics.map((mechanic) => (
                            <li class="text-justify">{mechanic}</li>
                        ))}
                    </ul>
                </div>
            </div>
        ))
    }

    <!-- WHO CAN PARTICIPATE SECTION -->
    <div class="py-20">
        <div class="h-fit p-4 justify-items-center">
            <h1
                class="font-bold text-center text-5xl lg:text-[96px] font-bebas tracking-wider text-black mt-10"
            >
                {participationContent.title}
            </h1>
        </div>
        <!-- Teacher -->
        <div class="bg-white">
            <div class="md:p-20 p-5">
                <div
                    class="grid md:grid-cols-2 grid-cols-1 place-items-center md:gap-10 gap-5 max-w-6xl mx-auto"
                >
                    <img
                        class="w-full h-auto shadow-md rounded-lg"
                        src={getImageUrl(participationContent.teacher.image)}
                    />
                    <div class="self-center w-full">
                        <h2 class="md:text-5xl text-4xl mb-5 text-black text-center md:text-left bg-amber-200 w-fit rounded-md p-3 roboto-extra-bold">
                            {participationContent.teacher.header}
                        </h2>
                        <p class="text-black inter md:pr-10 text-justify">
                            {participationContent.teacher.subtext}
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Student -->
        <div class="bg-[#f3f4f6]">
            <div class="md:p-20 p-5">
                <div
                    class="grid md:grid-cols-2 grid-cols-1 place-items-center md:gap-10 gap-5 max-w-6xl mx-auto"
                >
                    <div class="self-center w-full md:order-1 order-2">
                        <h2 class="md:text-5xl text-4xl mb-5 text-white text-center md:text-left bg-[#2562FF] w-fit rounded-md p-3 roboto-extra-bold">
                            {participationContent.student.header}
                        </h2>
                        <p class="text-black inter md:pr-10 text-justify">
                            {participationContent.student.subtext}
                        </p>
                    </div>
                    <div class="md:order-2 order-1">
                        <img
                            class="h-auto w-full shadow-md rounded-lg"
                            src={getImageUrl(participationContent.student.image)}
                        />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Compete-->

    <div class="place-items-center p-20 bg-white grid grid-cols-1">
        <p
            class="my-4 text-5xl lg:text-[96px] text-center font-bebas font-bold text-black tracking-wider"
        >
            {competeContent.header}
        </p>

        <p
            class="flex max-w-[700px] my-10 roboto text-center text-black text-lg"
        >
            {competeContent.subtext}
        </p>

        <a
            class="text-center text-2xl roboto-bold inline-block rounded-full bg-gradient-to-r from-BlueStart via-purple-600 to-PinkEnd px-8 py-3 text-white transition hover:scale-110 hover:shadow-xl focus:ring-3 focus:outline-hidden"
            href={competeContent.buttonLink}
        >
            {competeContent.buttonText}
        </a>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const triggers = document.querySelectorAll(".modal-trigger");
            triggers.forEach((trigger) => {
                trigger.addEventListener("click", (e) => {
                    e.preventDefault();
                    const modalId = trigger.getAttribute("data-modal-target");
                    const modal = document.getElementById(modalId);
                    if (modal) {
                        modal.classList.remove("hidden");
                    }
                });
            });

            const closeButtons = document.querySelectorAll("[data-modal-close]");
            closeButtons.forEach((button) => {
                button.addEventListener("click", () => {
                    const modalId = button.getAttribute("data-modal-close");
                    const modal = document.getElementById(modalId);
                    if (modal) {
                        modal.classList.add("hidden");
                    }
                });
            });

            const backdrops = document.querySelectorAll(".modal-backdrop");
            backdrops.forEach((backdrop) => {
                backdrop.addEventListener("click", (e) => {
                    if (e.target === backdrop) {
                        backdrop.classList.add("hidden");
                    }
                });
            });
        });
    </script>
</Layout>
<style>
    .page {
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        height: 100vh;
        width: 100%;
    }
    /* Hero Section */
    .hero {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-size: cover;
        background-position: center;
        height: 100vh;
        padding: 20px;
        color: white;
        text-align: center;
    }
    /* Hero Title */
    .hero-title {
        font-family: "Bebas Neue";
        font-size: 6rem;
        line-height: 1.2;
        margin-bottom: 1.2rem;
    }

    .hero-title .underline {
        text-decoration: underline;
        text-decoration-thickness: 0.5px;
        text-underline-offset: 2px;
    }
    /* Hero Subtitle */
    .hero-subtitle {
        font-family: "Poppins", sans-serif;
        font-size: 1.5rem;
        margin-bottom: 2rem;
        opacity: 0.9;
    }
    /* Hero Button */
    .hero-button {
        background-color: #ffffff;
        color: black;
        padding: 15px 30px;
        font-size: 1rem;
        font-family: "Poppins", sans-serif;
        font-weight: 600;
        text-decoration: none;
        border-radius: 50px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        transition:
            background-color 0.3s,
            transform 0.2s;
    }
    .hero-button:hover {
        background-color: #f0f0f0;
        transform: scale(1.1);
    }

    .overview {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        padding: 20px;
        text-align: center;
        background-color: white;
    }

    .subhead {
        font-family: "Inter";
        font-weight: 600;
        font-size: 24px;
        line-height: 1.2;
        /* margin-bottom: 1.2rem; */
        color: #6941c6;
    }
    .head {
        font-family: "bebas neue";
        font-size: 5rem;
        line-height: 1.2;
        margin-bottom: 1.2rem;
        font-weight: bold;
        color: black;
    }
    .info {
        font-family: Roboto, sans-serif;
        font-size: 1.2rem;
        line-height: 1.6;
        margin-bottom: 1.2rem;
        color: black;
    }

    .Teachers {
        /* background-image: url("./ParticipateImages/teachersBg.PNG"); */
        background-size: cover;
        background-position: center;
    }

    .Students {
        /* background-image: url("./ParticipateImages/studentsBg.PNG"); */
        background-color: #f3f4f6;
        background-size: cover;
        background-position: center;
    }

    .overview,
    .Teachers,
    .Students,
    .place-items-center.p-20.bg-white.grid.grid-cols-1 {
        opacity: 0;
        transform: translateY(40px);
        transition:
            opacity 0.8s ease,
            transform 0.8s cubic-bezier(0.23, 1, 0.32, 1);
    }
    .overview.visible,
    .Teachers.visible,
    .Students.visible,
    .place-items-center.p-20.bg-white.grid.grid-cols-1.visible {
        opacity: 1;
        transform: translateY(0);
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const learnMoreButton = document.querySelector(".hero-button");
        if (learnMoreButton) {
            learnMoreButton.addEventListener("click", () => {
                const introSection = document.getElementById("OverView");
                if (introSection) {
                    introSection.scrollIntoView({ behavior: "smooth" });
                } else {
                    console.error("Introduction section not found.");
                }
            });
        } else {
            console.error("Learn More button not found.");
        }
    });

    document.addEventListener("DOMContentLoaded", () => {
        const toggle = document.getElementById("menu-toggle");
        const menu = document.getElementById("mobile-menu");

        if (toggle && menu) {
            toggle.addEventListener("click", () => {
                menu.classList.toggle("hidden");
            });
        }
    });

    document.addEventListener("DOMContentLoaded", () => {
        // Existing modal logic...

        // Animation for main sections
        const sections = [
            document.querySelector(".overview"),
            document.querySelector(".Teachers"),
            document.querySelector(".Students"),
            document.querySelector(
                ".place-items-center.p-20.bg-white.grid.grid-cols-1"
            ),
        ].filter(Boolean);

        const observer = new IntersectionObserver(
            (entries, obs) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("visible");
                        obs.unobserve(entry.target);
                    }
                });
            },
            { threshold: 0.2 }
        );
        sections.forEach((section) => observer.observe(section));
    });
</script>
