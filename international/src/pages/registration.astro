---
import Layout from "../layouts/Layout.astro";
import { supabase } from '../lib/supabase-client';
import { getTemplate } from "../db/mongodb.js";
import { deepMerge } from "@/utils/deepMerge";

// Get country info from headers, passed by Express middleware
const countrySiteHeader = Astro.request.headers.get('x-country-site');
const countrySite = countrySiteHeader ? JSON.parse(countrySiteHeader) : { slug: 'default', name: 'Dubai' };
const countryName = countrySite.name;

// Handle form submission
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    
    // Extract form data
    const fullname = formData.get('fullname');
    const email = formData.get('email');
    const surname = formData.get('surname');
    const name = formData.get('name');
    const middleName = formData.get('middleName');
    const contactNumber = formData.get('contactNumber');
    const emailAddress = formData.get('emailAddress');
    const country = formData.get('country');
    const programType = formData.getAll('programType');
    const category = formData.get('category');
    const school = formData.get('school');
    const passportNumber = formData.get('passportNumber');
    const paymentOption = formData.get('paymentOption');
    
    // Handle file upload
    let paymentProofUrl = "";
    const paymentProofFile = formData.get('paymentProof');
    
    if (paymentProofFile && paymentProofFile.size > 0) {
      try {
        // Create a unique filename
        const timestamp = new Date().getTime();
        const filename = `payment_proof_${timestamp}_${paymentProofFile.name}`;
        
        // Upload file to Supabase Storage
        const { data: fileData, error: fileError } = await supabase.storage
          .from('payment_proofs')
          .upload(filename, paymentProofFile);
          
        if (fileError) {
          console.error('Error uploading file:', fileError);
        } else {
          // Get public URL
          const { data: urlData } = await supabase.storage
            .from('payment_proofs')
            .getPublicUrl(filename);
            
          paymentProofUrl = urlData?.publicUrl || "";
        }
      } catch (fileUploadError) {
        console.error('File upload error:', fileUploadError);
      }
    }
    
    // Insert registration data into database
    const { data, error } = await supabase
      .from('registrations')
      .insert([
        { 
          fullname: `${name} ${middleName} ${surname}`,
          email,
          contactNumber,
          country,
          program: programType,
          category,
          school,
          passportNumber,
          paymentOption,
          paymentProofUrl,
          verified: false,
          denied: false,
          registeredAt: new Date().toISOString(),
          event_country: countrySite.slug,
        }
      ]);
      
    if (error) {
      console.error('Error submitting registration:', error);
      throw new Error('Registration failed');
    }
    
    // Redirect to success page
    return Astro.redirect('/registration-success');
    
  } catch (error) {
    console.error('Error processing form:', error);
  }
}

// Fetch the entire template
const template = await getTemplate(countrySite.slug);
const dbContent = template?.config?.Contents || {};

// Define default content structure
const defaultContent = {
    title: `ROBOLUTION ${countryName} - Registration`,
    header: `üöÄ Erovoutika is now registered in ${countryName}! üåç‚ú®`,
    subHeader: `üî• ROBOLUTION: Robotics & Automation Competition 2025 in ${countryName}`,
    location: `${countryName}, ${countrySite.slug === 'dubai' || countrySite.slug === 'default' ? 'UAE' : ''}`.replace(/, $/, ''),
    eventFeatures: {
        title: "Event Features:",
        items: [
          "<strong>Training Camp</strong> - 1) Robotics & Automation, 2) Research & Innovation, 3) Cybersecurity",
          "<strong>Competition</strong> - 1) Erobot category, 2) Freestyle category, 3) EroMath, 4) Cybersecurity",
          "<strong>Divisions</strong> - Teacher/Industry, College, High School & Elementary",
          "<strong>Awards</strong> - Robotics Coach of the Year, Robotics Club of the Year, Global Young Innovator Award & Special Awards"
        ]
    },
    eventSchedule: {
        title: "Event Schedule:",
        schedule: "2-day Training, 1-day Tournament & Awarding, & 1-day Tour",
        date: "Dec. 15-18, 2025",
    },
    packages: {
        title: "Registration Packages:",
        items: [
            {
                name: "PACKAGE #1 (F2F with Accommodation)",
                description: "Includes: Training & Competition, Certificates, Hotel accommodation, Breakfast, Coffee break, Lunch & Tour",
                deadline: "Deadline: August 15, 2025",
                price: "Price: Php 59,950 (Philippines) / 3700 AED (International)"
            },
            {
                name: "PACKAGE #2 (F2F without Accommodation)",
                description: "Includes: Training & Competition, Certificates, Coffee break, Lunch",
                deadline: null,
                price: "Price: Php 39,950 (Philippines) / 2500 AED (International)"
            },
            {
                name: "PACKAGE #3 (Competition Only)",
                description: "Includes: Competition & Awarding only (Freestyle category & Erobot)",
                deadline: null,
                price: "Price: Php 6,950 (Philippines) / 500 AED (International)"
            },
            {
                name: "PACKAGE #4 (Virtual Competition)",
                description: "Includes: Virtual Competition & Awarding only (Freestyle Category-Hybrid & EroMath)",
                deadline: null,
                price: null
            }
        ],
        specialOffer: "Special Offer: 5 members (1 member FREE for program fee)",
        note: "*Reservation fee will be deducted from the total registration fee"
    },
    reservation: {
        title: "‚ö†Ô∏è LIMITED SLOTS ONLY! RESERVE YOUR SLOT NOW! ‚ö†Ô∏è",
        fee: "Reservation Fee: 250 AED ‚âà Php 4,250",
        note: "(Non-refundable but transferable to another service/program)",
        paymentInfo: "GCash: 09061497307 - Bhai Nhuraisha Deplomo"
    }
};

const pageContent = deepMerge(defaultContent, dbContent.Registration || {});

// Extract shared layout content
const layoutContent = {
    nav: dbContent.Navbar || {},
    footer: dbContent.Footer || {},
    banner: dbContent.Banner || {},
};
---

<Layout 
  title={pageContent.title}
  content={layoutContent}
>
  <div class="absolute inset-0 bg-gradient-to-b from-purple-900 via-blue-900 to-indigo-800 min-h-screen -z-10"></div>
  
  <main class="container mx-auto px-4 pt-40 pb-16 max-w-4xl relative z-10">
    <h1 class="text-4xl font-bold text-center mb-8 text-white drop-shadow-lg" set:html={pageContent.title}></h1>
    
    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
      <div class="text-center mb-6">
        <h2 class="text-xl font-semibold" set:html={pageContent.header}></h2>
        <p class="text-lg font-medium mt-4" set:html={pageContent.subHeader}></p>
      </div>
      
      <div class="mb-6">
        <h3 class="text-lg font-semibold mb-2" set:html={pageContent.eventFeatures.title}></h3>
        <ul class="list-disc pl-6 space-y-1">
          {pageContent.eventFeatures.items.map(item => <li set:html={item}></li>)}
        </ul>
      </div>
      
      <div class="mb-6">
        <h3 class="text-lg font-semibold mb-2" set:html={pageContent.eventSchedule.title}></h3>
        <p set:html={pageContent.eventSchedule.schedule}></p>
        <p class="font-bold mt-2">Date: {pageContent.eventSchedule.date}</p>
        <p class="font-bold">Location: {pageContent.location}</p>
      </div>
      
      <div class="mb-6">
        <h3 class="text-lg font-semibold mb-2" set:html={pageContent.packages.title}></h3>
        <div class="space-y-3">
          {pageContent.packages.items.map((pkg, index) => (
            <div class={`p-3 rounded border ${['bg-blue-50 border-blue-200', 'bg-green-50 border-green-200', 'bg-yellow-50 border-yellow-200', 'bg-purple-50 border-purple-200'][index % 4]}`}>
              <h4 class="font-medium" set:html={pkg.name}></h4>
              <p set:html={pkg.description}></p>
              {pkg.deadline && <p class="text-sm font-bold" set:html={pkg.deadline}></p>}
              {pkg.price && <p set:html={pkg.price}></p>}
            </div>
          ))}
        </div>
        
        <p class="mt-4 font-bold" set:html={pageContent.packages.specialOffer}></p>
        <p class="text-sm italic" set:html={pageContent.packages.note}></p>
      </div>
      
      <div class="p-3 bg-red-50 rounded border border-red-200 mb-6">
        <p class="font-bold text-center" set:html={pageContent.reservation.title}></p>
      </div>
      
      <div class="mb-6">
        <p class="text-center" set:html={pageContent.reservation.fee}></p>
        <p class="text-center text-sm" set:html={pageContent.reservation.note}></p>
        <p class="mt-2 text-center" set:html={pageContent.reservation.paymentInfo}></p>
      </div>
    </div>
    
    <!-- Registration Form -->
    <form method="POST" enctype="multipart/form-data" class="bg-white p-6 rounded-lg shadow-md">
      <h2 class="text-2xl font-bold mb-6 text-center">Registration Form</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
        <div>
          <label for="surname" class="block text-sm font-medium text-gray-700 mb-1">Surname*</label>
          <input 
            type="text" 
            id="surname" 
            name="surname" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="name" class="block text-sm font-medium text-gray-700 mb-1">First Name*</label>
          <input 
            type="text" 
            id="name" 
            name="name" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="middleName" class="block text-sm font-medium text-gray-700 mb-1">Middle Name</label>
          <input 
            type="text" 
            id="middleName" 
            name="middleName" 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="contactNumber" class="block text-sm font-medium text-gray-700 mb-1">Contact Number*</label>
          <input 
            type="tel" 
            id="contactNumber" 
            name="contactNumber" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email*</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="emailAddress" class="block text-sm font-medium text-gray-700 mb-1">Confirm Email*</label>
          <input 
            type="email" 
            id="emailAddress" 
            name="emailAddress" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country of Residence*</label>
          <input 
            type="text" 
            id="country" 
            name="country" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="school" class="block text-sm font-medium text-gray-700 mb-1">School/Company</label>
          <input 
            type="text" 
            id="school" 
            name="school" 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
        
        <div>
          <label for="passportNumber" class="block text-sm font-medium text-gray-700 mb-1">Passport Number (if applicable)</label>
          <input 
            type="text" 
            id="passportNumber" 
            name="passportNumber" 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
        </div>
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Which program do you want to join?*</label>
        <div class="space-y-2">
          <div class="flex items-start">
            <input 
              type="checkbox" 
              id="robotics" 
              name="programType" 
              value="Robotics & Automation" 
              class="h-5 w-5 rounded border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="robotics" class="text-sm">International Robotics & Automation Training Camp & Tournament</label>
          </div>
          
          <div class="flex items-start">
            <input 
              type="checkbox" 
              id="cybersecurity" 
              name="programType" 
              value="Cybersecurity" 
              class="h-5 w-5 rounded border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="cybersecurity" class="text-sm">International Cybersecurity Training Camp & Tournament</label>
          </div>
          
          <div class="flex items-start">
            <input 
              type="checkbox" 
              id="research" 
              name="programType" 
              value="Research and Development" 
              class="h-5 w-5 rounded border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="research" class="text-sm">International Research and Development Training Camp & Tournament</label>
          </div>
          
          <div class="flex items-start">
            <input 
              type="checkbox" 
              id="competition" 
              name="programType" 
              value="Competition & Awarding" 
              class="h-5 w-5 rounded border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="competition" class="text-sm">Competition & Awarding</label>
          </div>
        </div>
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Category*</label>
        <div class="space-y-2">
          <div class="flex items-center">
            <input 
              type="radio" 
              id="academe" 
              name="category" 
              value="Academe" 
              required 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mr-3"
            >
            <label for="academe" class="text-sm">Academe</label>
          </div>
          
          <div class="flex items-center">
            <input 
              type="radio" 
              id="industry" 
              name="category" 
              value="Industry" 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mr-3"
            >
            <label for="industry" class="text-sm">Industry</label>
          </div>
          
          <div class="flex items-center">
            <input 
              type="radio" 
              id="parent" 
              name="category" 
              value="Parent/Guardian" 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mr-3"
            >
            <label for="parent" class="text-sm">Parent/Guardian</label>
          </div>
          
          <div class="flex items-center">
            <input 
              type="radio" 
              id="student" 
              name="category" 
              value="Student" 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mr-3"
            >
            <label for="student" class="text-sm">Student</label>
          </div>
        </div>
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Package Option*</label>
        <div class="space-y-2">
          <div class="flex items-start">
            <input 
              type="radio" 
              id="option1" 
              name="paymentOption" 
              value="OPTION #1" 
              required 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="option1" class="text-sm">OPTION #1: Program Fee per head (Accommodation is included) - Deadline of this package is August 15, 2025</label>
          </div>
          
          <div class="flex items-start">
            <input 
              type="radio" 
              id="option2" 
              name="paymentOption" 
              value="OPTION #2" 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="option2" class="text-sm">OPTION #2: Program Fee per head (accommodation is not included)</label>
          </div>
          
          <div class="flex items-start">
            <input 
              type="radio" 
              id="option3" 
              name="paymentOption" 
              value="OPTION #3" 
              class="h-5 w-5 border border-gray-400 text-indigo-600 focus:ring-indigo-500 mt-1 mr-3"
            >
            <label for="option3" class="text-sm">OPTION #3: Competition Fee Only per head</label>
          </div>
        </div>
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">Payment Proof (Optional)</label>
        <div class="border-2 border-dashed border-gray-300 rounded-md p-4">
          <div class="space-y-2">
            <div class="flex items-center justify-center">
              <label for="paymentProof" class="cursor-pointer bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded-md text-sm flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                </svg>
                Upload Payment Proof
              </label>
              <input 
                type="file" 
                id="paymentProof" 
                name="paymentProof" 
                accept="image/*,.pdf" 
                class="hidden"
              >
            </div>
            <p class="text-xs text-gray-500 text-center">Max file size: 10MB. Accepted formats: JPEG, PNG, PDF</p>
            <p id="fileName" class="text-sm text-center text-gray-700"></p>
          </div>
        </div>
        <p class="text-sm mt-2">You can also submit your payment proof later by emailing it to <a href="mailto:erovoutika@gmail.com" class="text-blue-600 hover:underline">erovoutika@gmail.com</a></p>
      </div>
      
      <div class="mb-6">
        <p class="text-sm">By submitting this form, you agree to our <a href="#" class="text-blue-600 hover:underline">Terms and Conditions</a>.</p>
      </div>
      
      <div class="flex justify-center">
        <button 
          type="submit" 
          class="px-6 py-3 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
        >
          Submit Registration
        </button>
      </div>
      
      <script>
        // Display the selected file name
        document.getElementById('paymentProof').addEventListener('change', function(e) {
          const fileName = e.target.files[0]?.name || 'No file selected';
          document.getElementById('fileName').textContent = fileName;
        });
      </script>
    </form>
  </main>
</Layout>

<style>
  main {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }
</style> 