---
import Layout from "../../../layouts/Layout.astro";
import { getCountryContent, getCountryTraining } from "../../../components/db";

// Get the country parameter from the URL
const { country } = Astro.params;

// Get country data
let countryData = null;
if (import.meta.env.SSR && Astro.locals?.countryData) {
  // Use the server-side countryData
  countryData = Astro.locals.countryData;
} else {
  // Fetch country data from API
  countryData = await getCountryContent(country);
}

// Get training-specific data
const trainingData = await getCountryTraining(country);

// Set page title
const pageTitle = countryData ? `${countryData.name} - Trainings` : "Trainings";

// Set training details
const trainingTitle = trainingData?.title || "Robotics Training Programs";
const trainingDescription = trainingData?.description || "Discover our comprehensive robotics training programs designed to build skills and knowledge at all levels.";
const trainingBanner = trainingData?.bannerImage || "/international/training-banner.jpg";
const schedules = trainingData?.schedule || [];

// Get theme colors
const primaryColor = countryData?.themeColors?.primary || "#003399";
const accentColor = countryData?.themeColors?.accent || "#ff9900";

// Sample training courses if none provided
const sampleCourses = [
  {
    title: "Introduction to Robotics",
    duration: "4 weeks",
    level: "Beginner",
    description: "Learn the fundamentals of robotics including basic mechanics, electronics, and programming concepts.",
    image: "/international/intro-robotics.jpg"
  },
  {
    title: "Robot Programming with Python",
    duration: "6 weeks",
    level: "Intermediate",
    description: "Develop skills in programming robots using Python with hands-on projects and real-world applications.",
    image: "/international/python-robotics.jpg"
  },
  {
    title: "Advanced Robotics Engineering",
    duration: "8 weeks",
    level: "Advanced",
    description: "Deep dive into complex robotics systems, AI integration, and autonomous robot design.",
    image: "/international/advanced-robotics.jpg"
  }
];
---

<Layout title={pageTitle}>
  <div class="relative">
    <!-- Training Banner -->
    <div class="relative w-full h-[300px] md:h-[400px]">
      <img 
        src={trainingBanner} 
        alt={`${trainingTitle} Banner`} 
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-black bg-opacity-60"></div>
      <div class="absolute inset-0 flex flex-col justify-center items-center text-white p-4 text-center">
        <h1 class="text-4xl md:text-6xl font-bold mb-4">{trainingTitle}</h1>
        <p class="max-w-2xl text-xl">Advancing robotics education in {countryData?.name || "your region"}</p>
      </div>
    </div>
    
    <!-- Training Content -->
    <div class="container mx-auto py-12 px-4">
      <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
          <h2 class="text-3xl font-bold mb-6" style={`color: ${primaryColor};`}>About Our Training Programs</h2>
          
          <div class="prose prose-lg max-w-none">
            {trainingDescription && (
              <div class="mb-8" set:html={trainingDescription}></div>
            )}
          </div>
        </div>
      </div>
      
      <!-- Featured Training Courses -->
      <div class="mt-16">
        <h2 class="text-3xl font-bold mb-8 text-center" style={`color: ${primaryColor};`}>Featured Training Courses</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sampleCourses.map(course => (
            <div class="bg-white rounded-lg shadow-lg overflow-hidden">
              <img src={course.image} alt={course.title} class="w-full h-48 object-cover" />
              <div class="p-6">
                <div class="flex justify-between items-start mb-2">
                  <h3 class="text-xl font-bold" style={`color: ${primaryColor};`}>{course.title}</h3>
                  <span class="bg-gray-100 text-gray-800 text-xs font-medium px-2.5 py-0.5 rounded">{course.level}</span>
                </div>
                <p class="text-gray-500 text-sm mb-4">Duration: {course.duration}</p>
                <p class="mb-4">{course.description}</p>
                <a 
                  href="#" 
                  class="inline-flex items-center text-white px-4 py-2 rounded-md transition-all transform hover:scale-105"
                  style={`background-color: ${accentColor};`}
                >
                  Learn More
                  <svg class="w-3.5 h-3.5 ml-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                  </svg>
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Training Schedule -->
      {schedules.length > 0 && (
        <div class="mt-16 max-w-4xl mx-auto">
          <h2 class="text-3xl font-bold mb-8 text-center" style={`color: ${primaryColor};`}>Upcoming Training Sessions</h2>
          
          <div class="overflow-x-auto">
            <table class="w-full bg-white shadow-lg rounded-lg overflow-hidden">
              <thead class="text-white" style={`background-color: ${primaryColor};`}>
                <tr>
                  <th class="py-3 px-4 text-left">Course</th>
                  <th class="py-3 px-4 text-left">Date</th>
                  <th class="py-3 px-4 text-left">Description</th>
                  <th class="py-3 px-4 text-left">Action</th>
                </tr>
              </thead>
              <tbody>
                {schedules.map((schedule, index) => (
                  <tr class={index % 2 === 0 ? "bg-gray-50" : "bg-white"}>
                    <td class="py-3 px-4 font-medium">{schedule.title}</td>
                    <td class="py-3 px-4">{new Date(schedule.date).toLocaleDateString()}</td>
                    <td class="py-3 px-4">{schedule.description}</td>
                    <td class="py-3 px-4">
                      <a 
                        href="/registration" 
                        class="inline-flex items-center text-white text-sm px-3 py-1 rounded transition-all"
                        style={`background-color: ${accentColor};`}
                      >
                        Register
                      </a>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
      
      <!-- Contact Section -->
      <div class="mt-16 max-w-4xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden">
        <div class="p-8">
          <h2 class="text-3xl font-bold mb-6 text-center" style={`color: ${primaryColor};`}>Get in Touch</h2>
          
          <p class="text-center mb-8">
            Interested in our training programs? Contact us for more information or to discuss customized training for your organization.
          </p>
          
          <div class="flex flex-col md:flex-row justify-center gap-4">
            {countryData?.contactInfo?.email && (
              <a 
                href={`mailto:${countryData.contactInfo.email}`} 
                class="inline-flex items-center justify-center text-white px-6 py-3 rounded-md transition-all transform hover:scale-105"
                style={`background-color: ${primaryColor};`}
              >
                <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                Contact by Email
              </a>
            )}
            
            {countryData?.contactInfo?.phone && (
              <a 
                href={`tel:${countryData.contactInfo.phone}`} 
                class="inline-flex items-center justify-center text-white px-6 py-3 rounded-md transition-all transform hover:scale-105"
                style={`background-color: ${accentColor};`}
              >
                <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                Call Us
              </a>
            )}
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Apply any custom CSS -->
  {countryData?.customCSS && (
    <style set:html={countryData.customCSS}></style>
  )}
</Layout> 