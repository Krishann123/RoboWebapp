---
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import Cardnav from "../components/Cardnav.astro";
import { getTemplate } from "../db/mongodb.js";

// Get country info from headers, passed by Express middleware
const countrySiteHeader = Astro.request.headers.get('x-country-site');
const countrySite = countrySiteHeader ? JSON.parse(countrySiteHeader) : { slug: 'default' };

// Fetch the entire template
const template = await getTemplate(countrySite.slug);
const content = template?.config?.Contents || {};

// Extract the News content from the template
const newsContent = content.News || {};

// Extract shared layout content
const layoutContent = {
    nav: content.Navbar || {},
    footer: content.Footer || {},
    banner: content.Banner || {},
};

// Extract the content, with fallbacks to empty objects/arrays
const Hero = newsContent?.Hero || {};
const latestnews = newsContent?.["latest-news"] || [];
const events = newsContent?.["latest-events"] || [];
const web = newsContent?.["latest-webinar"] || [];
const cards = newsContent?.["latest-cards"] || [];

const getImageUrl = (imagePath) => {
    if (typeof imagePath !== 'string') return '/images/placeholder.png'; // Return placeholder if path is not a string

    // If it's an external URL, use it directly
    if (imagePath.startsWith('http')) {
        return imagePath;
    }

    // Handle images uploaded to the astro assets folder
    if (imagePath.startsWith('/src/assets/')) {
        return imagePath;
    }
    
    // Handle older /public/ paths if they exist
    if (imagePath.startsWith('/public/')) {
         return `/international${imagePath}`;
    }

    // Handle images that start with /images (uploaded through the admin panel)
    if (imagePath.startsWith('/images/')) {
        return imagePath;
    }

    // Fallback for any other path format
    return `/international/${imagePath}`;
};

const formatUrl = (url) => {
    if (typeof url !== 'string' || url.trim() === '' || url.trim() === '#') {
        return '#';
    }
    if (url.startsWith('http://') || url.startsWith('https://')) {
        return url;
    }
    if (url.startsWith('/')) { // Internal link
        return url;
    }
    return `https://${url}`;
}
---

<Layout 
    title="Erovoutika International - News"
    content={layoutContent}
>
    <section class="news-hero">
        <h1 class="news-hero-title">{Hero?.title || 'News'}</h1>
    </section>

    <div class="page-container">
        <section class="latest-news-section">
            <h2 class="section-title">Latest News</h2>
            <div class="scalable-news-grid">
                {latestnews.length > 0 ? latestnews.map(newsItem => (
                    <div class="news-item-card">
                        <a href={formatUrl(newsItem.NewsCard.link)}>
                            <img src={getImageUrl(newsItem.NewsCard.image)} alt={newsItem.NewsCard.alt} />
                        </a>
                        <div class="news-item-card-content">
                            <p class="news-date">{newsItem.NewsCard.date}</p>
                            <h5 class="news-item-title">{newsItem.NewsCard.description || newsItem.NewsCard.title}</h5>
                        </div>
                    </div>
                )) : <p>No latest news available.</p>}
            </div>
        </section>

        <section class="events-section">
            <h2 class="section-title">{events?.[0]?.NewsCard?.events || 'Events'}</h2>
            <div class="events-grid">
                {events.length > 0 ? events.map(event => (
                    <div class="event-card">
                        <a href={formatUrl(event.NewsCard.link)}>
                            <img src={getImageUrl(event.NewsCard.image)} alt={event.NewsCard.alt} />
                        </a>
                        <div class="event-card-content">
                            <p class="news-date">{event.NewsCard.date}</p>
                            <h5 class="event-title">{event.NewsCard.title}</h5>
                            <p class="event-description">{event.NewsCard.description}</p>
                        </div>
                    </div>
                )) : <p>No events to display.</p>}
            </div>
        </section>

        <section class="webinar-section">
            <h2 class="section-title">{web?.[0]?.NewsCard?.name || 'Webinars'}</h2>
             <div class="webinar-grid">
                {web.length > 0 ? web.map(item => (
                    <a href={formatUrl(item.NewsCard.link)} class="webinar-card">
                        <img src={getImageUrl(item.NewsCard.image)} alt={item.NewsCard.alt} />
                        <div class="webinar-card-content">
                            <p class="news-date">{item.NewsCard.date}</p>
                            <h5 class="webinar-title">{item.NewsCard.title}</h5>
                            <p class="webinar-description">{item.NewsCard.description}</p>
                        </div>
                    </a>
                )) : <p>No webinars to display.</p>}
            </div>
        </section>
        
        <section class="more-news-section">
             <div class="cardnav-grid">
                {cards.length > 0 ? cards.map(card => (
                    <Cardnav image={getImageUrl(card.image)} icon={card.icon} text={card.text} source={card.source} link={formatUrl(card.link)} date={card.date} />
                )) : <p>No additional content available.</p>}
            </div>
        </section>
    </div>
</Layout>

<style>
    .page-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .news-hero {
        text-align: center;
        padding: 4rem 2rem;
        background-color: #f8f9fa;
    }

    .news-hero-title {
        font-family: 'Bebas Neue', sans-serif;
        font-size: 5rem;
        font-weight: bold;
        color: #212529;
    }

    .section-title {
        font-size: 2.5rem;
        font-family: 'Bebas Neue', sans-serif;
        margin-bottom: 2rem;
        margin-top: 3rem;
        color: #343a40;
    }
    .scalable-news-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .scalable-news-grid > .news-item-card:last-child:first-child{
    width: 400px;
    }

    .news-item-card {
        background: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: transform 0.3s ease;
    }
    .news-item-card:hover {
        transform: translateY(-5px);
    }
    .news-item-card img {
        width: 100%;
        height: 220px;
        object-fit: cover;
    }
    .news-item-card-content {
        padding: 1.5rem;
    }
    .news-item-title {
        font-size: 1.25rem;
        font-weight: bold;
        margin-top: 0.5rem;
    }
    
    .news-date {
        font-size: 0.9rem;
        font-weight: 300;
        margin-bottom: 0.5rem;
    }

    .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .event-card {
        background: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .event-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .event-card-content {
        padding: 1.5rem;
    }

    .event-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin: 0.5rem 0;
    }

    .event-description {
        font-size: 1rem;
        color: #6c757d;
    }

    .webinar-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .webinar-card {
        display: flex;
        background: #ffffff;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        overflow: hidden;
        color: inherit;
        text-decoration: none;
    }

    .webinar-card img {
        width: 300px;
        height: auto;
        object-fit: cover;
    }

    .webinar-card-content {
        padding: 1.5rem;
    }

    .webinar-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin: 0.5rem 0;
    }

    .webinar-description {
        font-size: 1rem;
        color: #6c757d;
    }
    
    .cardnav-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }
</style>
