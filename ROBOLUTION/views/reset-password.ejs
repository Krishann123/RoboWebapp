<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reset Password | Robolution</title>
  <link rel="shortcut icon" href="/images/ROBOLUTION_ICON.ico" type="image/x-icon">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/responsive.css">
  <style>
    body {
      background-color: #f8f9fa;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .reset-container {
      max-width: 500px;
      margin: 120px auto 40px;
      padding: 30px;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }
    
    .reset-header {
      text-align: center;
      margin-bottom: 25px;
    }
    
    .logo {
      max-width: 200px;
      margin-bottom: 15px;
    }
    
    .reset-title {
      color: #00008b;
      font-size: 1.8rem;
      margin-bottom: 10px;
    }
    
    .reset-subtitle {
      color: #555;
      font-size: 1rem;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      font-weight: bold;
      margin-bottom: 8px;
      color: #444;
    }
    
    .form-group input {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1rem;
      box-sizing: border-box;
    }
    
    .password-container {
      position: relative;
      display: flex;
      align-items: center;
    }

    .password-container input {
      width: 100%;
      padding-right: 40px; /* Make space for the icon */
    }

    .toggle-password {
      position: absolute;
      right: 12px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #666;
      font-size: 18px;
    }
    
    .password-requirements {
      background-color: #f8f9fa;
      border-radius: 4px;
      padding: 15px;
      margin-bottom: 20px;
    }
    
    .password-requirements h3 {
      color: #555;
      font-size: 1rem;
      margin-top: 0;
      margin-bottom: 10px;
    }
    
    .password-requirements ul {
      margin: 0;
      padding-left: 20px;
    }
    
    .password-requirements li {
      color: #666;
      margin-bottom: 5px;
      font-size: 0.9rem;
    }
    
    .reset-btn {
      width: 100%;
      padding: 12px;
      background-color: #00008b;
      color: white;
      border: none;
      border-radius: 4px;
      font-size: 1rem;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    .reset-btn:hover {
      background-color: #0000cd;
    }
    
    .reset-btn:disabled {
      background-color: #cccccc;
      cursor: not-allowed;
    }
    
    .message {
      padding: 15px;
      margin: 20px 0;
      border-radius: 5px;
      display: none;
    }
    
    .error {
      background-color: #f8d7da;
      border-color: #f5c6cb;
      color: #721c24;
    }
    
    .success {
      background-color: #d4edda;
      border-color: #c3e6cb;
      color: #155724;
    }
    
    .footer {
      margin-top: auto;
      background-color: #00008b;
      color: white;
      padding: 15px 0;
    }
    
    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }
    
    @media (max-width: 768px) {
      .reset-container {
        margin: 80px auto 40px;
        padding: 20px;
      }
      
      .footer-content {
        flex-direction: column;
        text-align: center;
      }
      
      .footer-content > div {
        margin-bottom: 10px;
      }
    }
  </style>
</head>
<body>
  <div class="reset-container">
    <div class="reset-header">
      <img src="/images/LOGO.webp" alt="Robolution Logo" class="logo">
      <h1 class="reset-title">Reset Your Password</h1>
      <p class="reset-subtitle">Enter a new password for your account.</p>
    </div>
    
    <div id="messageContainer" class="message"></div>
    
    <form id="resetPasswordForm">
      <input type="hidden" id="resetToken" value="<%= token %>">
      
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" value="<%= user.email %>" readonly>
      </div>
      
      <div class="form-group">
        <label for="password">New Password</label>
        <div class="password-container">
          <input type="password" id="password" name="password" required>
          <i class="toggle-password" id="togglePassword">üëÅÔ∏è</i>
        </div>
      </div>
      
      <div class="form-group">
        <label for="confirmPassword">Confirm New Password</label>
        <div class="password-container">
          <input type="password" id="confirmPassword" name="confirmPassword" required>
          <i class="toggle-password" id="toggleConfirmPassword">üëÅÔ∏è</i>
        </div>
      </div>
      
      <div class="password-requirements">
        <h3>Password Requirements:</h3>
        <ul>
          <li>At least 8 characters long</li>
          <li>At least one lowercase letter</li>
          <li>At least one uppercase letter</li>
          <li>At least one number</li>
          <li>At least one special character</li>
        </ul>
      </div>
      
      <button type="submit" class="reset-btn" id="resetBtn">Reset Password</button>
    </form>
  </div>
  
  <footer class="footer">
    <div class="footer-content">
      <div class="footer-left">
        <p>Powered by Erovoutika</p>
      </div>
      <div class="footer-right">
        <p>Unit 703, PARC HOUSE II, Epifanio de los Santos Ave, Makati, 1212 Metro Manila</p>
        <p><strong>Contact us via:</strong> 0974 423 1557 || erovoutika@gmail.com</p>
      </div>
    </div>
  </footer>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const resetPasswordForm = document.getElementById('resetPasswordForm');
      const messageContainer = document.getElementById('messageContainer');
      const resetBtn = document.getElementById('resetBtn');
      const resetToken = document.getElementById('resetToken').value;
      
      // Password toggle functionality
      const togglePassword = document.getElementById('togglePassword');
      const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
      const passwordField = document.getElementById('password');
      const confirmPasswordField = document.getElementById('confirmPassword');
      
      togglePassword.addEventListener('click', function() {
        const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordField.setAttribute('type', type);
        togglePassword.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üîí';
      });
      
      toggleConfirmPassword.addEventListener('click', function() {
        const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordField.setAttribute('type', type);
        toggleConfirmPassword.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üîí';
      });
      
      resetPasswordForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const password = passwordField.value;
        const confirmPassword = confirmPasswordField.value;
        
        // Clear previous messages
        messageContainer.style.display = 'none';
        messageContainer.innerHTML = '';
        
        // Validate passwords
        let passwordErrors = [];
        if (password.length < 8) {
          passwordErrors.push('Password must be at least 8 characters long.');
        }
        if (!/[a-z]/.test(password)) {
          passwordErrors.push('Password must contain at least one lowercase letter.');
        }
        if (!/[A-Z]/.test(password)) {
          passwordErrors.push('Password must contain at least one uppercase letter.');
        }
        if (!/[0-9]/.test(password)) {
          passwordErrors.push('Password must contain at least one number.');
        }
        if (!/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)) {
          passwordErrors.push('Password must contain at least one special character.');
        }
        
        if (password !== confirmPassword) {
          passwordErrors.push('Passwords do not match.');
        }
        
        if (passwordErrors.length > 0) {
          showMessage(passwordErrors.join('<br>'), 'error');
          return;
        }
        
        // Disable button and show loading state
        resetBtn.disabled = true;
        resetBtn.textContent = 'Resetting...';
        
        // Submit the form via fetch API
        fetch(`/password-reset/reset/${resetToken}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ password, confirmPassword }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showMessage(data.message || 'Your password has been reset successfully!', 'success');
            resetPasswordForm.reset();
            
            // Redirect to login page after 3 seconds
            setTimeout(() => {
              window.location.href = '/login';
            }, 3000);
          } else {
            showMessage(data.message || 'An error occurred while resetting your password.', 'error');
            resetBtn.disabled = false;
            resetBtn.textContent = 'Reset Password';
          }
        })
        .catch(error => {
          console.error('Error:', error);
          showMessage('An error occurred while resetting your password.', 'error');
          resetBtn.disabled = false;
          resetBtn.textContent = 'Reset Password';
        });
      });
      
      // Helper function to show messages
      function showMessage(message, type) {
        messageContainer.innerHTML = message;
        messageContainer.className = 'message ' + type;
        messageContainer.style.display = 'block';
      }
    });
  </script>
</body>
</html> 