<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>International News Management - Robolution Admin</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    :root {
      --primary-color: #00008b;
      --primary-light: #1a1a9e;
      --primary-dark: #000066;
      --secondary-color: #4CAF50;
      --secondary-hover: #45a049;
      --text-light: #f8f9fa;
      --text-dark: #343a40;
      --bg-light: #ffffff;
      --bg-dark: #212529;
      --bg-gray: #f8f9fa;
      --border-color: #dee2e6;
    }

    .tab-pane {
      padding: 20px;
      background-color: var(--bg-light);
      border-radius: 0 0 0.25rem 0.25rem;
    }
    
    .news-card {
      transition: all 0.3s;
    }
    
    .news-card:hover {
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .news-card img {
      height: 200px;
      object-fit: cover;
    }
    
    .btn-add-news {
      position: fixed;
      bottom: 30px;
      right: 30px;
      height: 60px;
      width: 60px;
      border-radius: 50%;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
      z-index: 100;
    }
    
    .news-actions {
      position: absolute;
      top: 10px;
      right: 10px;
    }
    
    .form-label {
      font-weight: 500;
    }
  </style>
</head>
<body>
  <div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2 class="mb-0">International News Management</h2>
      <a href="/admin" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-2"></i> Back to Dashboard
      </a>
    </div>
    
    <div class="card mb-4">
      <div class="card-header bg-primary text-white">
        <h5 class="mb-0">News Categories</h5>
      </div>
      <div class="card-body">
        <ul class="nav nav-tabs" id="newsTabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="latest-news-tab" data-bs-toggle="tab" data-bs-target="#latest-news" type="button" role="tab">Latest News</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="events-tab" data-bs-toggle="tab" data-bs-target="#events" type="button" role="tab">Events</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="webinar-tab" data-bs-toggle="tab" data-bs-target="#webinar" type="button" role="tab">Webinars</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="cards-tab" data-bs-toggle="tab" data-bs-target="#cards" type="button" role="tab">News Cards</button>
          </li>
        </ul>
        
        <div class="tab-content" id="newsTabContent">
          <!-- Latest News Tab -->
          <div class="tab-pane fade show active" id="latest-news" role="tabpanel">
            <div class="d-flex justify-content-between mb-3">
              <h4>Latest News</h4>
              <button class="btn btn-success" onclick="openAddNewsModal('latest-news')">
                <i class="fas fa-plus me-2"></i> Add News Article
              </button>
            </div>
            <div id="latest-news-container" class="row g-4">
              <!-- News items will be loaded here -->
              <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Events Tab -->
          <div class="tab-pane fade" id="events" role="tabpanel">
            <div class="d-flex justify-content-between mb-3">
              <h4>Events</h4>
              <button class="btn btn-success" onclick="openAddNewsModal('latest-events')">
                <i class="fas fa-plus me-2"></i> Add Event
              </button>
            </div>
            <div id="events-container" class="row g-4">
              <!-- Events will be loaded here -->
              <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Webinar Tab -->
          <div class="tab-pane fade" id="webinar" role="tabpanel">
            <div class="d-flex justify-content-between mb-3">
              <h4>Webinars</h4>
              <button class="btn btn-success" onclick="openAddNewsModal('latest-webinar')">
                <i class="fas fa-plus me-2"></i> Add Webinar
              </button>
            </div>
            <div id="webinar-container" class="row g-4">
              <!-- Webinars will be loaded here -->
              <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Cards Tab -->
          <div class="tab-pane fade" id="cards" role="tabpanel">
            <div class="d-flex justify-content-between mb-3">
              <h4>News Cards</h4>
              <button class="btn btn-success" onclick="openAddNewsModal('latest-cards')">
                <i class="fas fa-plus me-2"></i> Add News Card
              </button>
            </div>
            <div id="cards-container" class="row g-4">
              <!-- News cards will be loaded here -->
              <div class="col-12 text-center py-5">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Add News Modal -->
  <div class="modal fade" id="addNewsModal" tabindex="-1" aria-labelledby="addNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title" id="addNewsModalLabel">Add News Article</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="newsForm">
            <input type="hidden" id="newsCategory" name="category" value="">
            
            <div class="mb-3">
              <label for="newsTitle" class="form-label">Title*</label>
              <input type="text" class="form-control" id="newsTitle" name="title" required>
            </div>
            
            <div class="mb-3">
              <label for="newsDate" class="form-label">Date*</label>
              <input type="text" class="form-control" id="newsDate" name="date" placeholder="e.g., Mar 24, 2025" required>
            </div>
            
            <div class="mb-3">
              <label for="newsDescription" class="form-label">Description*</label>
              <textarea class="form-control" id="newsDescription" name="description" rows="3" required></textarea>
            </div>
            
            <div class="mb-3">
              <label for="newsImage" class="form-label">Image*</label>
              <div class="input-group">
                <input type="text" class="form-control" id="newsImage" name="image" placeholder="/src/assets/images/NewsUpdateImages/example.png" required>
                <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('imageUpload').click()">Upload</button>
              </div>
              <input type="file" id="imageUpload" accept="image/*" style="display:none;" onchange="uploadNewsImage(this)">
              <div class="mt-2" id="uploadStatus"></div>
              <small class="text-muted">Enter the image path or upload a new image.</small>
            </div>
            
            <div class="mb-3">
              <label for="newsLink" class="form-label">Link*</label>
              <input type="text" class="form-control" id="newsLink" name="link" required>
            </div>
            
            <div class="mb-3">
              <label for="newsAlt" class="form-label">Alt Text</label>
              <input type="text" class="form-control" id="newsAlt" name="alt">
            </div>
            
            <!-- Only for latest-news -->
            <div id="subtitleField" class="mb-3 d-none">
              <label for="newsSubtitle" class="form-label">Subtitle</label>
              <input type="text" class="form-control" id="newsSubtitle" name="subtitle">
            </div>
            
            <!-- Only for latest-webinar -->
            <div id="nameField" class="mb-3 d-none">
              <label for="newsName" class="form-label">Name</label>
              <input type="text" class="form-control" id="newsName" name="name">
            </div>
            
            <!-- Only for latest-events -->
            <div id="eventsField" class="mb-3 d-none">
              <label for="newsEvents" class="form-label">Events Label</label>
              <input type="text" class="form-control" id="newsEvents" name="events" value="Events">
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="saveNews()">Save</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Delete Confirmation Modal -->
  <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header bg-danger text-white">
          <h5 class="modal-title">Confirm Deletion</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this news item? This action cannot be undone.
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
        </div>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Function to upload news image
    function uploadNewsImage(input) {
      const uploadStatus = document.getElementById('uploadStatus');
      uploadStatus.innerHTML = `
        <div class="alert alert-info">
          <div class="d-flex align-items-center">
            <div class="spinner-border spinner-border-sm me-2" role="status"></div>
            Uploading image...
          </div>
        </div>
      `;
      
      const file = input.files[0];
      if (!file) {
        uploadStatus.innerHTML = `
          <div class="alert alert-danger">
            No file selected
          </div>
        `;
        return;
      }
      
      // Create form data
      const formData = new FormData();
      formData.append('image', file);
      
      // Upload file
      fetch('/api/international/upload-image', {
        method: 'POST',
        body: formData
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          // Update image path field
          document.getElementById('newsImage').value = data.filePath;
          
          // Show success message
          uploadStatus.innerHTML = `
            <div class="alert alert-success">
              Image uploaded successfully!
            </div>
          `;
        })
        .catch(error => {
          console.error('Error uploading image:', error);
          uploadStatus.innerHTML = `
            <div class="alert alert-danger">
              Error uploading image. Please try again.
            </div>
          `;
        });
    }
    
    let newsData = {
      latestNews: [],
      latestEvents: [],
      latestWebinar: [],
      latestCards: []
    };
    
    // Fetch news data when page loads
    document.addEventListener('DOMContentLoaded', fetchNewsData);
    
    function fetchNewsData() {
      fetch('/api/international/news')
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          newsData = data;
          renderNewsData();
        })
        .catch(error => {
          console.error('Error fetching news data:', error);
          document.querySelectorAll('.spinner-border').forEach(spinner => {
            spinner.parentElement.innerHTML = `
              <div class="alert alert-danger" role="alert">
                Error loading news data. Please try refreshing the page.
              </div>
            `;
          });
        });
    }
    
    function renderNewsData() {
      // Render latest news
      const latestNewsContainer = document.getElementById('latest-news-container');
      latestNewsContainer.innerHTML = renderNewsItems(newsData.latestNews, 'latest-news');
      
      // Render events
      const eventsContainer = document.getElementById('events-container');
      eventsContainer.innerHTML = renderNewsItems(newsData.latestEvents, 'latest-events');
      
      // Render webinars
      const webinarContainer = document.getElementById('webinar-container');
      webinarContainer.innerHTML = renderNewsItems(newsData.latestWebinar, 'latest-webinar');
      
      // Render cards
      const cardsContainer = document.getElementById('cards-container');
      cardsContainer.innerHTML = renderNewsItems(newsData.latestCards, 'latest-cards', true);
    }
    
    function renderNewsItems(items, category, isCard = false) {
      if (!items || items.length === 0) {
        return `
          <div class="col-12 text-center py-5">
            <p class="text-muted">No items found. Add a new item to get started.</p>
          </div>
        `;
      }
      
      return items.map((item, index) => {
        const newsItem = isCard ? item : item.NewsCard;
        let imageUrl;
        
        if (newsItem.image) {
          // For debugging
          console.log(`Original image path: ${newsItem.image}`);
          
          if (newsItem.image.startsWith('http')) {
            // Handle full URLs
            imageUrl = newsItem.image;
          } else if (newsItem.image.startsWith('/image-')) {
            // Handle images uploaded directly to public directory - these are the new uploads
            // They should be accessible directly from the root
            imageUrl = newsItem.image;
          } else if (newsItem.image.startsWith('/public/')) {
            // Handle paths that start with /public/
            imageUrl = `/international${newsItem.image}`;
          } else if (newsItem.image.startsWith('/src/assets/images/')) {
            // Most common case in default.json - paths starting with /src/assets/images/
            imageUrl = `/international/src/assets/images${newsItem.image.substring(16)}`;
          } else if (newsItem.image.startsWith('/src/assets/')) {
            // Handle paths that start with /src/assets/
            imageUrl = `/international/src/assets${newsItem.image.substring(11)}`;
          } else {
            // Handle paths that might be relative to international/public
            // First check if it's an absolute path
            if (newsItem.image.startsWith('/')) {
              imageUrl = `/international${newsItem.image}`;
            } else {
              imageUrl = `/international/${newsItem.image}`;
            }
          }
          
          // For debugging
          console.log(`Rendered image URL: ${imageUrl}`);
        } else {
          // Default placeholder
          imageUrl = '/images/placeholder.png';
        }
        
        return `
          <div class="col-md-4">
            <div class="card news-card h-100 position-relative">
              <img src="${imageUrl}" class="card-img-top" alt="${newsItem.alt || 'News image'}">
              <div class="card-body">
                <h5 class="card-title">${newsItem.title || ''}</h5>
                <p class="card-text text-muted mb-1">${newsItem.date || ''}</p>
                <p class="card-text">${newsItem.description || ''}</p>
                <a href="${newsItem.link || '#'}" target="_blank" class="btn btn-sm btn-primary">View Link</a>
              </div>
              <div class="news-actions">
                <button class="btn btn-sm btn-danger" onclick="confirmDelete('${category}', ${index})">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            </div>
          </div>
        `;
      }).join('');
    }
    
    function openAddNewsModal(category) {
      // Reset form
      document.getElementById('newsForm').reset();
      
      // Set category
      document.getElementById('newsCategory').value = category;
      
      // Update modal title based on category
      const modalTitle = document.getElementById('addNewsModalLabel');
      if (category === 'latest-news') {
        modalTitle.textContent = 'Add News Article';
        document.getElementById('subtitleField').classList.remove('d-none');
        document.getElementById('nameField').classList.add('d-none');
        document.getElementById('eventsField').classList.add('d-none');
      } else if (category === 'latest-events') {
        modalTitle.textContent = 'Add Event';
        document.getElementById('subtitleField').classList.add('d-none');
        document.getElementById('nameField').classList.add('d-none');
        document.getElementById('eventsField').classList.remove('d-none');
      } else if (category === 'latest-webinar') {
        modalTitle.textContent = 'Add Webinar';
        document.getElementById('subtitleField').classList.add('d-none');
        document.getElementById('nameField').classList.remove('d-none');
        document.getElementById('eventsField').classList.add('d-none');
      } else if (category === 'latest-cards') {
        modalTitle.textContent = 'Add News Card';
        document.getElementById('subtitleField').classList.remove('d-none');
        document.getElementById('nameField').classList.add('d-none');
        document.getElementById('eventsField').classList.add('d-none');
      }
      
      // Open modal
      const modal = new bootstrap.Modal(document.getElementById('addNewsModal'));
      modal.show();
    }
    
    function saveNews() {
      // Get form data
      const form = document.getElementById('newsForm');
      const formData = new FormData(form);
      const category = formData.get('category');
      
      // Convert to JSON object
      const newsItem = {};
      formData.forEach((value, key) => {
        if (key !== 'category' && value) {
          newsItem[key] = value;
        }
      });
      
      // Send request to API
      fetch(`/api/international/news/${category}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(newsItem)
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          // Close modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('addNewsModal'));
          modal.hide();
          
          // Reload data
          fetchNewsData();
          
          // Show success message
          alert('News item added successfully!');
        })
        .catch(error => {
          console.error('Error adding news item:', error);
          alert('Error adding news item. Please try again.');
        });
    }
    
    function confirmDelete(category, index) {
      // Setup confirm button action
      const confirmBtn = document.getElementById('confirmDeleteBtn');
      confirmBtn.onclick = () => deleteNews(category, index);
      
      // Open modal
      const modal = new bootstrap.Modal(document.getElementById('deleteConfirmationModal'));
      modal.show();
    }
    
    function deleteNews(category, index) {
      // Send request to API
      fetch(`/api/international/news/${category}/${index}`, {
        method: 'DELETE'
      })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          // Close modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('deleteConfirmationModal'));
          modal.hide();
          
          // Reload data
          fetchNewsData();
          
          // Show success message
          alert('News item deleted successfully!');
        })
        .catch(error => {
          console.error('Error deleting news item:', error);
          alert('Error deleting news item. Please try again.');
        });
    }
  </script>
</body>
</html> 